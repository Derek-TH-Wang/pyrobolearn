<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from crab_model.xacro               | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="crab" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Build the body frame -->
  <!--link name="base_link"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="thorax"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint-->
  <!-- Note the density of the aluminium is about 2,710kg/m^3, and the densityf of the alloys of aluminium does not vary widely from this figure ranging between 2,640kg/m^3 and 2,810kg/m^3 (from www.thyssenkrupp-materials.co.uk/density-of-aluminium.html) -->
  <!-- One servo has a weight of approximately 0.055kg -->
  <link name="thorax">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <!--mass value="1"/> <!-- volume = 0.061867e-3 -->
      <mass value="0.16765957"/> <!-- volume = 0.061867e-3m^3, density = 2,710kg/m^3 -->
      <origin xyz="0.000137 0.000006 0.002405"/>
      <!--inertia ixx="0.011935e-5" ixy="0.0" ixz="-0.000021e-5" iyy="0.022562e-5" iyz="-0.000001e-5" izz="0.026533e-5"/-->
      <!--inertia ixx="0.00192913831" ixy="0.0" ixz="-0.00000339437" iyy="0.00364685535" iyz="-1.6163706e-7" izz="0.00428871611"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00032343849" ixy="0.0" ixz="-5.69098615e-7" iyy="0.00061143019" iyz="-2.71e-8" izz="0.00071904429"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/thorax.STL"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="thorax_collision">
        <mesh filename="meshes/thorax.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <!-- Pi parameter -->
  <!-- Joint properties -->
  <!-- Leg macros -->
  <!-- Build robot model -->
  <joint name="leg_center_joint_r1" type="fixed">
    <origin rpy="0 0 0" xyz="0.087598 -0.050575 0"/>
    <parent link="thorax"/>
    <child link="leg_center_r1"/>
  </joint>
  <link name="leg_center_r1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_r1" type="revolute">
    <origin rpy="0 0 -1.0471975512" xyz="0 0 0"/>
    <parent link="leg_center_r1"/>
    <child link="coxa_r1"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_r1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 -0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="-0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="-0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="-0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="-0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="-0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="-0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_r1_collision">
        <mesh filename="meshes/coxa_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_r1" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_r1"/>
    <child link="femur_r1"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_r1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_r1_collision">
        <mesh filename="meshes/femur_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_r1" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_r1"/>
    <child link="tibia_r1"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_r1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="0.000061e-5" iyy="0.001368e-5" iyz="0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="0.00003787408" iyy="0.0008493729" iyz="0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="0.00000210758" iyy="0.00004726527" iyz="3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_r1_collision">
        <mesh filename="meshes/tibia_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_r1" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_r1"/>
    <child link="tibia_foot_r1"/>
  </joint>
  <link name="tibia_foot_r1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="leg_center_joint_r2" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.06985 0"/>
    <parent link="thorax"/>
    <child link="leg_center_r2"/>
  </joint>
  <link name="leg_center_r2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_r2" type="revolute">
    <origin rpy="0 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="leg_center_r2"/>
    <child link="coxa_r2"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_r2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 2,710kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 -0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="-0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="-0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="-0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="-0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="-0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="-0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_r2_collision">
        <mesh filename="meshes/coxa_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_r2" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_r2"/>
    <child link="femur_r2"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_r2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_r2_collision">
        <mesh filename="meshes/femur_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_r2" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_r2"/>
    <child link="tibia_r2"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_r2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="0.000061e-5" iyy="0.001368e-5" iyz="0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="0.00003787408" iyy="0.0008493729" iyz="0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="0.00000210758" iyy="0.00004726527" iyz="3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_r2_collision">
        <mesh filename="meshes/tibia_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_r2" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_r2"/>
    <child link="tibia_foot_r2"/>
  </joint>
  <link name="tibia_foot_r2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="leg_center_joint_r3" type="fixed">
    <origin rpy="0 0 0" xyz="-0.087598 -0.050575 0"/>
    <parent link="thorax"/>
    <child link="leg_center_r3"/>
  </joint>
  <link name="leg_center_r3">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_r3" type="revolute">
    <origin rpy="0 0 -2.09439510239" xyz="0 0 0"/>
    <parent link="leg_center_r3"/>
    <child link="coxa_r3"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_r3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 2,710kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 -0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="-0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="-0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="-0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="-0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="-0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="-0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_r3_collision">
        <mesh filename="meshes/coxa_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_r3" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_r3"/>
    <child link="femur_r3"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_r3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_r3_collision">
        <mesh filename="meshes/femur_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_r3" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_r3"/>
    <child link="tibia_r3"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_r3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="0.000061e-5" iyy="0.001368e-5" iyz="0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="0.00003787408" iyy="0.0008493729" iyz="0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="0.00000210758" iyy="0.00004726527" iyz="3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_r.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_r3_collision">
        <mesh filename="meshes/tibia_r.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_r3" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_r3"/>
    <child link="tibia_foot_r3"/>
  </joint>
  <link name="tibia_foot_r3">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="leg_center_joint_l1" type="fixed">
    <origin rpy="0 0 0" xyz="0.087598 0.050575 0"/>
    <parent link="thorax"/>
    <child link="leg_center_l1"/>
  </joint>
  <link name="leg_center_l1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_l1" type="revolute">
    <origin rpy="0 0 1.0471975512" xyz="0 0 0"/>
    <parent link="leg_center_l1"/>
    <child link="coxa_l1"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_l1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_l1_collision">
        <mesh filename="meshes/coxa_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_l1" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_l1"/>
    <child link="femur_l1"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_l1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 -0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_l1_collision">
        <mesh filename="meshes/femur_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_l1" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_l1"/>
    <child link="tibia_l1"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_l1">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 -0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="-0.000061e-5" iyy="0.001368e-5" iyz="-0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="-0.00003787408" iyy="0.0008493729" iyz="-0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="-0.00000210758" iyy="0.00004726527" iyz="-3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_l1_collision">
        <mesh filename="meshes/tibia_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_l1" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_l1"/>
    <child link="tibia_foot_l1"/>
  </joint>
  <link name="tibia_foot_l1">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="leg_center_joint_l2" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.06985 0"/>
    <parent link="thorax"/>
    <child link="leg_center_l2"/>
  </joint>
  <link name="leg_center_l2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_l2" type="revolute">
    <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
    <parent link="leg_center_l2"/>
    <child link="coxa_l2"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_l2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_l2_collision">
        <mesh filename="meshes/coxa_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_l2" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_l2"/>
    <child link="femur_l2"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_l2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 -0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_l2_collision">
        <mesh filename="meshes/femur_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_l2" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_l2"/>
    <child link="tibia_l2"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_l2">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 -0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="-0.000061e-5" iyy="0.001368e-5" iyz="-0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="-0.00003787408" iyy="0.0008493729" iyz="-0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="-0.00000210758" iyy="0.00004726527" iyz="-3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_l2_collision">
        <mesh filename="meshes/tibia_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_l2" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_l2"/>
    <child link="tibia_foot_l2"/>
  </joint>
  <link name="tibia_foot_l2">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="leg_center_joint_l3" type="fixed">
    <origin rpy="0 0 0" xyz="-0.087598 0.050575 0"/>
    <parent link="thorax"/>
    <child link="leg_center_l3"/>
  </joint>
  <link name="leg_center_l3">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
  <joint name="coxa_joint_l3" type="revolute">
    <origin rpy="0 0 2.09439510239" xyz="0 0 0"/>
    <parent link="leg_center_l3"/>
    <child link="coxa_l3"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="coxa_l3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.120"/> <!-- volume = 0.033302e-3, mass of 2 servos = 0,110kg + mass of a little bit of alloy = 0.010kg (approx) -->
      <origin xyz="0.014769 0.007977 0.004815"/>
      <!--inertia ixx="0.001380e-5" ixy="0.000093e-5" ixz="-0.000177e-5" iyy="0.001442e-5" iyz="0.000030e-5" izz="0.001371e-5"/-->
      <!--inertia ixx="0.00041438952" ixy="0.00002792625" ixz="-0.00005314996" iyy="0.00043300702" iyz="0.00000900846" izz="0.00041168698"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00004972674" ixy="0.00000335115" ixz="-0.00000637799" iyy="0.00005196084" iyz="0.00000108101" izz="0.00004940243"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/coxa_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0.7 0 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="coxa_l3_collision">
        <mesh filename="meshes/coxa_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="femur_joint_l3" type="revolute">
    <origin rpy="-1.57079632679 0 0" xyz="0.0294 0 0"/>
    <parent link="coxa_l3"/>
    <child link="femur_l3"/>
    <axis xyz="0 0 -1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="femur_l3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.00834951"/> <!-- volume = 0.003081e-3, density = 2,710kg/m^3 -->
      <origin xyz="0.0400002 0.0017746 -0.0213350"/>
      <!--inertia ixx="0.000012e-5" ixy="0.0e-5" ixz="0.0e-5" iyy="0.000319e-5" iyz="0.0e-5" izz="0.000330e-5"/-->
      <!--inertia ixx="0.00003894839" ixy="0.0" ixz="0.0" iyy="0.00103537812" iyz="0.0" izz="0.00107108081"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="3.25199972e-7" ixy="0.0" ixz="0.0" iyy="0.00000864489" iyz="0.0" izz="0.00000894299"/> <!-- divided by the volume and multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/femur_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0 0.7 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry name="femur_l3_collision">
        <mesh filename="meshes/femur_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_joint_l3" type="revolute">
    <origin rpy="3.14159265359 0 1.57079632679" xyz="0.08 0 0"/>
    <parent link="femur_l3"/>
    <child link="tibia_l3"/>
    <axis xyz="0 0 1"/>
    <limit effort="10000" lower="-1.5" upper="1.5" velocity="100"/>
  </joint>
  <link name="tibia_l3">
    <inertial> <!-- these inertia are calculated based on the visual meshes using Meshlab, and using a density of 1kg/m^3 (http://gazebosim.org/tutorials?tut=inertia) -->
      <mass value="0.05564726"/> <!-- volume = 0.016106e-3, density = 2,710kg + 0.013kg for the servo (a little bit random) -->
      <origin xyz="-0.0025176 0.0017559 -0.0028322"/>
      <!--inertia ixx="0.000317e-5" ixy="-0.000054e-5" ixz="-0.000061e-5" iyy="0.001368e-5" iyz="-0.000011e-5" izz="0.001244e-5"/-->
      <!--inertia ixx="0.00019682106" ixy="-0.00003352787" ixz="-0.00003787408" iyy="0.0008493729" iyz="-0.00000682975" izz="0.00077238296"/> <!-- divided by the volume, just need to be multiplied by the mass -->
      <inertia ixx="0.00001095255" ixy="-0.00000186573" ixz="-0.00000210758" iyy="0.00004726527" iyz="-3.80056874e-7" izz="0.00004298099"/> <!-- divided by the volume, just need to be multiplied by the mass -->
    </inertial>
    <visual>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry>
        <mesh filename="meshes/tibia_l.STL"/>
      </geometry>
      <material name="">
        <color rgba="0.7 0 0.7 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0.06" xyz="0 0 0"/>
      <geometry name="tibia_l3_collision">
        <mesh filename="meshes/tibia_l.STL" scale="1. 1. 1."/>
      </geometry>
    </collision>
  </link>
  <joint name="tibia_foot_joint_l3" type="fixed">
    <origin rpy="0 0 0" xyz="0.117 0 0"/>
    <parent link="tibia_l3"/>
    <child link="tibia_foot_l3"/>
  </joint>
  <link name="tibia_foot_l3">
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
  </link> <!-- in pybullet, the inertia need to be specified even for dummy links, otherwise it will put an identity inertia and a mass of 1 by default -->
</robot>
